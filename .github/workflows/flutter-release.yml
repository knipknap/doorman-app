name: Flutter release

on:
  push:
    branches:    
      - master

  release:
    types: [published]

jobs:
  build:
    name: Build and test the release

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Setup Java
        uses: actions/setup-java@v1
        with:
          java-version: '11.x'

      - name: Setup Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: beta

      - name: Install NDK 23.1.7779620
        run: $ANDROID_HOME/tools/bin/sdkmanager --install "ndk;23.1.7779620"

      - name: Flutter version
        run: flutter --version

      # env.FLUTTER_HOME comes from the subosito/flutter-action step.
      - name: Cache pub dependencies
        uses: actions/cache@v2
        with:
          path: ${{ env.FLUTTER_HOME }}/.pub-cache
          key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: ${{ runner.os }}-pub-

      - name: Download pub dependencies
        run: flutter pub get

      - name: Run build_runner
        run: flutter pub run build_runner build -r --delete-conflicting-outputs

      - name: Run analyzer
        run: flutter analyze

      - name: Run tests
        run: flutter test

      - name: Download Android keystore
        id: android_keystore
        uses: timheuer/base64-to-file@v1.0.3
        with:
          fileName: key.jks
          encodedString: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Create key.properties
        run: |
          echo "storeFile=${{ steps.android_keystore.outputs.filePath }}" > android/key.properties
          echo "storePassword=${{ secrets.ANDROID_KEYSTORE_PASSWORD }}" >> android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties

      - name: Build Android app bundle
        run: flutter build appbundle --release -v

      - name: Upload the app bundle
        uses: actions/upload-artifact@v2
        with:
          name: doorman-${{ github.sha }}.aab
          path: build/app/outputs/bundle/release/app-release.aab
          retention-days: 2

  release-android:
    needs: [build]
    name: Upload to Google Play store

    runs-on: ubuntu-latest

    steps:
      - name: Download the app created by the build job
        uses: actions/download-artifact@v2
        with:
          name: doorman-${{ github.sha }}.aab

      - name: Setup Ruby
        uses: actions/setup-ruby@v1
        with:
          ruby-version: '2.6'

      - name: Cache bundle dependencies
        uses: actions/cache@v2
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
          restore-keys: ${{ runner.os }}-gems-

      - name: Download bundle dependencies
        run: |
          gem install bundler:2.0.2
          bundle config path vendor/bundle
          bundle install

      - name: Release to Google Play (beta)
        env:
          SUPPLY_PACKAGE_NAME: ${{ secrets.ANDROID_PACKAGE_NAME }}
          SUPPLY_JSON_KEY_DATA: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}
        run: |
          bundle exec fastlane supply \
          --aab app-release.aab \
          --track beta